@startuml
!pragma teoz true

/' Hard delete cascade flow for deliverability_test and deliverability_test_logs. '/

actor User as user

participant "Web UI" as web_ui

box Backend
    box Service Manager
participant "External API" as ext
control "Service Manager" as service_manager
participant "Service API" as api
end box
    participant "Deliverability Test Service" as deliverability_test
    participant "Deliverability Test Log Service" as deliverability_test_log
end box

box Database
    database "deliverability_test" as dt
    database "deliverability_test_logs" as dtl
end box

/' Step-by-step deletion flow with cascade '/

user -> web_ui: Clicks "Delete Test" {test_id}
web_ui -> service_manager: Request delete for {test_id}
service_manager -> deliverability_test: Delete test {test_id}
activate deliverability_test

deliverability_test -> dt: DELETE test WHERE test_id = {test_id}

dt -> dt: Locate row in deliverability_test with test_id
dt -> dt: Remove test row from deliverability_test
dt --> deliverability_test: Test deleted

/' Cascade process begins '/
deliverability_test -> api: Trigger ON DELETE CASCADE for test_id
api -> deliverability_test_log: Trigger ON DELETE CASCADE for test_id
activate deliverability_test_log
deliverability_test_log -> dtl: Find all logs WHERE test_id = {test_id}
dtl -> dtl: DELETE logs with test_id = {test_id}
dtl --> deliverability_test_log: Logs deleted
deliverability_test_log --> api: Test and logs deleted
deactivate deliverability_test_log

api --> service_manager: Deletion successful
service_manager --> web_ui: Success response
web_ui --> user: Removed test from display
@enduml
