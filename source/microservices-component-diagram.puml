@startuml

/'Defines all the components in the diagram, including the actor.'/
User as user

package UI {
    component "Web UI" as web_ui
    component "Mobile App" as mobile_app
}

node "Application Server" {
    component "Service Manager" as service_manager

    package "Listener" {
        queue "Listener Queue" as listener_queue
        component "Listener" as listener
    }

    component "Deliverability Test Log Service" as dtl_service
    component "Deliverability Test Service" as dt_service
    component "Deliverability Test Phones Service" as dtp_service
    component "Report Generation Service" as rg_service
    component "Scheduler" as scheduler
    component "Messaging Service" as messenger
}

cloud "Broker API" {
    interface "Bandwidth API" as bandwidth
}

database Database {
    skinparam componentStyle rectangle
    component "Deliverability Test Log" as dtl
    component "Deliverability Test" as dt
    component "Deliverability Test Phones" as dtp
    skinparam componentStyle uml2
}

/'Defines the interactions between the components in the diagram.'/
/'Frontend Interactions'/
user -- web_ui
user -- mobile_app
web_ui -- service_manager
mobile_app -- service_manager
web_ui -- dtp_service
mobile_app -- dtp_service

/'Backend Interactions'/
service_manager -- listener_queue
listener_queue -- listener
listener -- service_manager
service_manager -- dt_service
service_manager -- dtl_service
service_manager -- rg_service
scheduler -- service_manager
service_manager -- messenger

/'Database Interactions'/
scheduler -- dtl
dtp_service -- dtp
dtl_service -- dtl
dt_service -- dt

/'Third Party Interactions'/
bandwidth -- messenger
@enduml
