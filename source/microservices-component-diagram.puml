@startuml

/'Defines all the components in the diagram, including the actor.'/ 
User as user

package UI {
    component "Web UI" as web_ui
    component "Mobile App" as mobile_app
}

node "Application Server" {
    component "Service Manager" as service_manager

    package "Schedulers" {
        component "Text Execution Scheduler" as text_exec_scheduler
        component "Send Message Scheduler" as send_msg_scheduler
    }

    component "Deliverability Test Log Service" as dtl_service
    component "Deliverability Test Service" as dt_service
    component "Deliverability Test Phones Service" as dtp_service
    component "Report Generation Service" as rg_service
    component "Messaging Service" as messenger
    component "Authentication Service" as auth
}

cloud "Aggregator API" {
    interface "Bandwidth API" as bandwidth
}

database Database {
    skinparam componentStyle rectangle
    database deliverability_test as dt
    database deliverability_test_logs as dtl
    database deliverability_test_phones as dtp
    database deliverability_test_users as dtu
    skinparam componentStyle uml2
}

/'Defines the interactions between the components in the diagram.'/ 

/'Frontend Interactions'/ 
user -- web_ui
user -- mobile_app
web_ui -- service_manager
mobile_app -- service_manager

/'Backend Interactions'/ 
service_manager -- text_exec_scheduler
service_manager -- send_msg_scheduler
service_manager -- dt_service
service_manager -- dtl_service
text_exec_scheduler -- dt_service
send_msg_scheduler -- dtl_service
service_manager -- rg_service
service_manager -- messenger
service_manager -- auth
service_manager -- dtp_service

/'Database Interactions'/ 
dtp_service -- dtp
dtl_service -- dtl
dt_service -- dt
auth -- dtu
rg_service -- dt

/'Third Party Interactions'/ 
bandwidth -- messenger

@enduml
